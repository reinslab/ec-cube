<?php
/* ActiveFusions 2015/11/09 16:20 */

namespace Plugin\MailTemplateEdit\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * MailTemplateEdit
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MailTemplateEditRepository extends EntityRepository{

	/**
	* find all
	*
	* @return type
	**/
	public function findAll(){
		//$query = $this->getEntityManager()->createQuery('SELECT m FROM Plugin\MailTemplateEdit\Entity\MailTemplateEdit m ORDER BY m.id ASC');
		$query = $this->getEntityManager()->createQuery('SELECT m.id, m.name, m.file_name, m.subject, m.header, m.footer, m.del_flg, m.create_date, m.update_date, (SELECT COUNT(l.MailTemplate) FROM Eccube\Entity\MailHistory l WHERE l.MailTemplate = m.id) AS count9 FROM Plugin\MailTemplateEdit\Entity\MailTemplateEdit m ORDER BY m.id ASC');
		$result = $query->getResult(Query::HYDRATE_ARRAY);
		return $result;
	}

	/**
	* @param  \Plugin\MailTemplateEdit\Entity\MailTemplateEdit $MailTemplateEdit
	* @return bool
	*/
	public function save(\Plugin\MailTemplateEdit\Entity\MailTemplateEdit $MailTemplateEdit){
		$em = $this->getEntityManager();
		$em->getConnection()->beginTransaction();
		try {
			if(!$MailTemplateEdit->getId()) {
				$Creator = $this->getEntityManager()->getRepository('\Eccube\Entity\Member')->find(2);
				//$MailTemplateEdit->setName($MailTemplate->getSubject());
				$MailTemplateEdit->setCreator($Creator);
				$MailTemplateEdit->setFileName("Mail/order.twig");
				$MailTemplateEdit->setDelFlg(0);
			}
			$em->persist($MailTemplateEdit);
			$em->flush();
			$em->getConnection()->commit();
		} catch (\Exception $e) {
			$em->getConnection()->rollback();
			return false;
		}
		return true;
	}

	/**
	* @param  \Plugin\MailTemplateEdit\Entity\MailTemplateEdit $MailTemplateEdit
	* @return bool
	**/
	public function delete(\Plugin\MailTemplateEdit\Entity\MailTemplateEdit $MailTemplateEdit){

		$em = $this->getEntityManager();
		$em->getConnection()->beginTransaction();
		try {
			$MailTemplateEdit->setDelFlg(1);
			$em->persist($MailTemplateEdit);
			$em->flush();
			$em->getConnection()->commit();
		} catch (\Exception $e) {
			$em->getConnection()->rollback();
			return false;
		}
		return true;

	}
}
